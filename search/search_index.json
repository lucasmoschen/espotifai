{"config":{"lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Overview What this is Espotifai is our approach to the playlist continuation problem . That is, given a playlist, how to continuate it? We know that nowadays recommenders are extremely important, both for the greater production of content never seen before, and for the massive access provided by digital platforms. Music recommendation is no exception, so it is important to study and develop ways to match people and music they like or they will like. We studied and implemented two algorithms that try to solve the problem of playlist continuation, inspired by Kelen et al. and Pauws and Eggen . Both of them use an idea of k-NN, but the former use a similarity among playlists and the latter use a similarity among tracks. Motivation We both love music, and the music reccomendation systems intrigue us. Our goals Given an incomplete playlist, we should complete it. Also, we should deal with the problem of the leak of playlist data on the internet, so as with the computational problems that appear. This is our final project for Foundations of Data Science , a Mathematical Modelling Master's subject at Getulio Vargas Foundation (FGV).","title":"Overview"},{"location":"#overview","text":"","title":"Overview"},{"location":"#what-this-is","text":"Espotifai is our approach to the playlist continuation problem . That is, given a playlist, how to continuate it? We know that nowadays recommenders are extremely important, both for the greater production of content never seen before, and for the massive access provided by digital platforms. Music recommendation is no exception, so it is important to study and develop ways to match people and music they like or they will like. We studied and implemented two algorithms that try to solve the problem of playlist continuation, inspired by Kelen et al. and Pauws and Eggen . Both of them use an idea of k-NN, but the former use a similarity among playlists and the latter use a similarity among tracks.","title":"What this is"},{"location":"#motivation","text":"We both love music, and the music reccomendation systems intrigue us.","title":"Motivation"},{"location":"#our-goals","text":"Given an incomplete playlist, we should complete it. Also, we should deal with the problem of the leak of playlist data on the internet, so as with the computational problems that appear. This is our final project for Foundations of Data Science , a Mathematical Modelling Master's subject at Getulio Vargas Foundation (FGV).","title":"Our goals"},{"location":"conclusion/","text":"Conclusion TO DO","title":"Conclusion"},{"location":"conclusion/#conclusion","text":"TO DO","title":"Conclusion"},{"location":"eda/","text":"EDA TO DO","title":"EDA"},{"location":"eda/#eda","text":"TO DO","title":"EDA"},{"location":"evolution/","text":"Project evolution TO DO","title":"Project evolution"},{"location":"evolution/#project-evolution","text":"TO DO","title":"Project evolution"},{"location":"model_1/","text":"Model based on track similarity TO DO","title":"Model based on track similarity"},{"location":"model_1/#model-based-on-track-similarity","text":"TO DO","title":"Model based on track similarity"},{"location":"model_2/","text":"Model based on playlist similarity TO DO","title":"Model based on playlist similarity"},{"location":"model_2/#model-based-on-playlist-similarity","text":"TO DO","title":"Model based on playlist similarity"},{"location":"related_work/","text":"Related work The ACM RecSys Challenge 2018 In 2018, it was organized the ACM RecSys Challenge 2018 , a competition with the goal of playlist continuation. One of the organizators was the Spotify. As described by Chen et al. , it was given the competitors a dataset with one milion Spotify playlists alongside a dataset with incomplete ten thousand playlists to be continuated. The Challenge and the published papers served as inspiration for our work. Papers In 2002, Pauws and Eggen developed PATS: Realization and User Evaluation of an Automatic Playlist Generator , which inspired us in our track-based similairity algorithm. One of the participant groups of the ACM RecSys Challenge 2018, Kelen et al. (2018) inspired us in our playlist-based similarity algorithm. Bonnin and Jannach (2014) gave us an introduction and an overview of the playlist continuation problem. Also was A Large-Scale Evaluation of Acoustic and Subjective Music Similarity Measures (2003).","title":"Related work"},{"location":"related_work/#related-work","text":"","title":"Related work"},{"location":"related_work/#the-acm-recsys-challenge-2018","text":"In 2018, it was organized the ACM RecSys Challenge 2018 , a competition with the goal of playlist continuation. One of the organizators was the Spotify. As described by Chen et al. , it was given the competitors a dataset with one milion Spotify playlists alongside a dataset with incomplete ten thousand playlists to be continuated. The Challenge and the published papers served as inspiration for our work.","title":"The ACM RecSys Challenge 2018"},{"location":"related_work/#papers","text":"In 2002, Pauws and Eggen developed PATS: Realization and User Evaluation of an Automatic Playlist Generator , which inspired us in our track-based similairity algorithm. One of the participant groups of the ACM RecSys Challenge 2018, Kelen et al. (2018) inspired us in our playlist-based similarity algorithm. Bonnin and Jannach (2014) gave us an introduction and an overview of the playlist continuation problem. Also was A Large-Scale Evaluation of Acoustic and Subjective Music Similarity Measures (2003).","title":"Papers"}]}